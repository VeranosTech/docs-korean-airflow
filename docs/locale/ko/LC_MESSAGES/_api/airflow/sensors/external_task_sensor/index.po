# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Airflow package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Airflow 1.10.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-03 17:47+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../_api/airflow/sensors/external_task_sensor/index.rst:4
msgid ":mod:`airflow.sensors.external_task_sensor`"
msgstr ""

#: ../../_api/airflow/sensors/external_task_sensor/index.rst:15
msgid "Module Contents"
msgstr ""

#: ../../_api/airflow/sensors/external_task_sensor/index.rst:24
msgid "Bases::class:`airflow.sensors.base_sensor_operator.BaseSensorOperator`"
msgstr ""

#: ../../_api/airflow/sensors/external_task_sensor/index.rst:28
msgid ""
"Waits for a different DAG or a task in a different DAG to complete for a "
"specific execution_date"
msgstr ""

#: ../../_api/airflow/sensors/external_task_sensor/index.rst
msgid "Parameters"
msgstr ""

#: ../../_api/airflow/sensors/external_task_sensor/index.rst:31
msgid "The dag_id that contains the task you want to wait for"
msgstr ""

#: ../../_api/airflow/sensors/external_task_sensor/index.rst:34
msgid ""
"The task_id that contains the task you want to wait for. If ``None`` the "
"sensor waits for the DAG"
msgstr ""

#: ../../_api/airflow/sensors/external_task_sensor/index.rst:37
msgid "list of allowed states, default is ``['success']``"
msgstr ""

#: ../../_api/airflow/sensors/external_task_sensor/index.rst:39
msgid ""
"time difference with the previous execution to look at, the default is "
"the same execution_date as the current task or DAG. For yesterday, use "
"[positive!] datetime.timedelta(days=1). Either execution_delta or "
"execution_date_fn can be passed to ExternalTaskSensor, but not both."
msgstr ""

#: ../../_api/airflow/sensors/external_task_sensor/index.rst:45
msgid ""
"function that receives the current execution date and returns the desired"
" execution dates to query. Either execution_delta or execution_date_fn "
"can be passed to ExternalTaskSensor, but not both."
msgstr ""

#: ../../_api/airflow/sensors/external_task_sensor/index.rst:49
msgid ""
"Set to `True` to check if the external task exists (when external_task_id"
" is not None) or check if the DAG to wait for exists (when "
"external_task_id is None), and immediately cease waiting if the external "
"task or DAG does not exist (default value: False)."
msgstr ""

