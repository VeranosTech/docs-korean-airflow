# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Airflow package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Airflow 1.10.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-03 17:47+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../_api/airflow/contrib/sensors/python_sensor/index.rst:4
msgid ":mod:`airflow.contrib.sensors.python_sensor`"
msgstr ""

#: ../../_api/airflow/contrib/sensors/python_sensor/index.rst:15
msgid "Module Contents"
msgstr ""

#: ../../_api/airflow/contrib/sensors/python_sensor/index.rst:24
msgid "Bases::class:`airflow.sensors.base_sensor_operator.BaseSensorOperator`"
msgstr ""

#: ../../_api/airflow/contrib/sensors/python_sensor/index.rst:28
msgid "Waits for a Python callable to return True."
msgstr ""

#: ../../_api/airflow/contrib/sensors/python_sensor/index.rst:30
msgid ""
"User could put input argument in templates_dict e.g ``templates_dict = "
"{'start_ds': 1970}`` and access the argument by calling "
"``kwargs['templates_dict']['start_ds']`` in the the callable"
msgstr ""

#: ../../_api/airflow/contrib/sensors/python_sensor/index.rst
msgid "Parameters"
msgstr ""

#: ../../_api/airflow/contrib/sensors/python_sensor/index.rst:35
msgid "A reference to an object that is callable"
msgstr ""

#: ../../_api/airflow/contrib/sensors/python_sensor/index.rst:37
msgid "a dictionary of keyword arguments that will get unpacked in your function"
msgstr ""

#: ../../_api/airflow/contrib/sensors/python_sensor/index.rst:40
msgid ""
"a list of positional arguments that will get unpacked when calling your "
"callable"
msgstr ""

#: ../../_api/airflow/contrib/sensors/python_sensor/index.rst:43
msgid ""
"if set to true, Airflow will pass a set of keyword arguments that can be "
"used in your function. This set of kwargs correspond exactly to what you "
"can use in your jinja templates. For this to work, you need to define "
"`**kwargs` in your function header."
msgstr ""

#: ../../_api/airflow/contrib/sensors/python_sensor/index.rst:49
msgid ""
"a dictionary where the values are templates that will get templated by "
"the Airflow engine sometime between ``__init__`` and ``execute`` takes "
"place and are made available in your callable's context after the "
"template has been applied."
msgstr ""

