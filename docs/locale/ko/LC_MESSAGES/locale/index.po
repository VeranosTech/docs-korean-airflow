# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Airflow package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Airflow 1.10.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-03 15:37+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../index.rst:23
msgid "Apache Airflow Documentation"
msgstr ""

#: ../../index.rst:25
msgid ""
"Airflow is a platform to programmatically author, schedule and monitor "
"workflows."
msgstr ""

#: ../../index.rst:28
msgid ""
"Use Airflow to author workflows as Directed Acyclic Graphs (DAGs) of "
"tasks. The Airflow scheduler executes your tasks on an array of workers "
"while following the specified dependencies. Rich command line utilities "
"make performing complex surgeries on DAGs a snap. The rich user interface"
" makes it easy to visualize pipelines running in production, monitor "
"progress, and troubleshoot issues when needed."
msgstr ""

#: ../../index.rst:35
msgid ""
"When workflows are defined as code, they become more maintainable, "
"versionable, testable, and collaborative."
msgstr ""

#: ../../index.rst:45
msgid "Principles"
msgstr ""

#: ../../index.rst:47
msgid ""
"**Dynamic**:  Airflow pipelines are configuration as code (Python), "
"allowing for dynamic pipeline generation. This allows for writing code "
"that instantiates pipelines dynamically."
msgstr ""

#: ../../index.rst:48
msgid ""
"**Extensible**:  Easily define your own operators, executors and extend "
"the library so that it fits the level of abstraction that suits your "
"environment."
msgstr ""

#: ../../index.rst:49
msgid ""
"**Elegant**:  Airflow pipelines are lean and explicit. Parameterizing "
"your scripts is built into the core of Airflow using the powerful "
"**Jinja** templating engine."
msgstr ""

#: ../../index.rst:50
msgid ""
"**Scalable**:  Airflow has a modular architecture and uses a message "
"queue to orchestrate an arbitrary number of workers. Airflow is ready to "
"scale to infinity."
msgstr ""

#: ../../index.rst:54
msgid "Beyond the Horizon"
msgstr ""

#: ../../index.rst:56
msgid ""
"Airflow **is not** a data streaming solution. Tasks do not move data from"
" one to the other (though tasks can exchange metadata!). Airflow is not "
"in the `Spark Streaming <http://spark.apache.org/streaming/>`_ or `Storm "
"<https://storm.apache.org/>`_ space, it is more comparable to `Oozie "
"<http://oozie.apache.org/>`_ or `Azkaban "
"<http://data.linkedin.com/opensource/azkaban>`_."
msgstr ""

#: ../../index.rst:63
msgid ""
"Workflows are expected to be mostly static or slowly changing. You can "
"think of the structure of the tasks in your workflow as slightly more "
"dynamic than a database structure would be. Airflow workflows are "
"expected to look similar from a run to the next, this allows for clarity "
"around unit of work and continuity."
msgstr ""

#: ../../index.rst:71
msgid "Content"
msgstr ""

