# SOME DESCRIPTIVE TITLE.
# Copyright (C)
# This file is distributed under the same license as the Airflow package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
msgid ""
msgstr ""
"Project-Id-Version: Airflow 1.10.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-03 15:37+0900\n"
"PO-Revision-Date: 2019-05-01 17:17+0900\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ko\n"
"X-Generator: Poedit 2.2.1\n"

#: ../../start.rst:19
msgid "Quick Start"
msgstr "빠른 시작(Quick Start)"

#: ../../start.rst:21
msgid "The installation is quick and straightforward."
msgstr "설치는 빠르고 간단하다."

#: ../../start.rst:48
msgid ""
"Upon running these commands, Airflow will create the ``$AIRFLOW_HOME`` "
"folder and lay an \"airflow.cfg\" file with defaults that get you going "
"fast. You can inspect the file either in ``$AIRFLOW_HOME/airflow.cfg``, "
"or through the UI in the ``Admin->Configuration`` menu. The PID file for "
"the webserver will be stored in ``$AIRFLOW_HOME/airflow-webserver.pid`` "
"or in ``/run/airflow/webserver.pid`` if started by systemd."
msgstr ""
"이러한 명령어가 실행되는 동안, 에어플로우는 ``$AIRFLOW_HOME`` 폴더를 생성"
"하고 기본값의 “airflow.cfg” 파일을 만들어 놓아서 빠르게 진행할 수 있도록 "
"한다. 이 설정파일은 ``$AIRFLOW_HOME/airflow.cfg`` 또는 UI에서 ``Admin-"
">Configuration`` 메뉴를 통해 확인해 볼 수 있다. 웹서버(webserver)를 위한 "
"PID 파일은 ``$AIRFLOW_HOME/airflow-webserver.pid``\\에 저장되거나 또는 "
"systemd로 시작했을 경우 ``/run/airflow/webserver.pid``\\에 저장될 것이다."

#: ../../start.rst:55
msgid ""
"Out of the box, Airflow uses a sqlite database, which you should outgrow "
"fairly quickly since no parallelization is possible using this database "
"backend. It works in conjunction with the :class:`airflow.executors."
"sequential_executor.SequentialExecutor` which will only run task "
"instances sequentially. While this is very limiting, it allows you to "
"get up and running quickly and take a tour of the UI and the command "
"line utilities."
msgstr ""
"에어플로우는 sqlite 데이터베이스를 사용하는데, 이 데이터베이스 백엔드를 "
"사용하면 병렬화가 가능하지 않기 때문에 점차 사용하지 않게 될 수 있다. 이"
"것은 태스크 인스턴스를 순차적으로 실행하는 :class:`airflow.executors."
"sequential_executor.SequentialExecutor`\\와 함께 사용된다. 매우 제한적이"
"긴 하지만, 빠르게 실행해볼 수 있고 UI와 커맨드 라인 유틸리티를 살펴볼 수 "
"있다."

#: ../../start.rst:62
msgid ""
"Here are a few commands that will trigger a few task instances. You "
"should be able to see the status of the jobs change in the "
"``example_bash_operator`` DAG as you run the commands below."
msgstr ""
"몇 가지 태스크 인스턴스를 트리거 하는 명령어들이 여기에 있다. 아래의 명령"
"어를 실행함으로써 ``example_bash_operator`` DAG 내부의 잡(job)의 상태가 "
"변하는 것을 볼 수 있다."

#: ../../start.rst:74
msgid "What's Next?"
msgstr "다음은 무엇인가?"

#: ../../start.rst:75
msgid ""
"From this point, you can head to the :doc:`tutorial` section for further "
"examples or the :doc:`howto/index` section if you're ready to get your "
"hands dirty."
msgstr ""
"이 시점에서, :doc:`tutorial` 섹션으로 이동하여 계속해서 예제를 보거나 준"
"비가 되었다면 :doc:`howto/index` 섹션으로 이동할 수 있다."
